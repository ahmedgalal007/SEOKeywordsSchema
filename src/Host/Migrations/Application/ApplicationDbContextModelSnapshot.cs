// <auto-generated />
using System;
using Host.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Host.Migrations.Application
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SEOKeywordsSchema.Schemas.Contracts.BaseValueTypes.Text", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AdditionalTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DescriptionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdditionalTypeId");

                    b.HasIndex("DescriptionId");

                    b.ToTable("Text", "Schema.Property");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("SEOKeywordsSchema.Schemas.Contracts.BaseValueTypes.URL", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AdditionalTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MainEntityOfPageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SubjectOfId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdditionalTypeId");

                    b.HasIndex("ImageId");

                    b.HasIndex("MainEntityOfPageId");

                    b.HasIndex("SubjectOfId");

                    b.ToTable("URL", "Schema.Property");
                });

            modelBuilder.Entity("SEOKeywordsSchema.Schemas.SchemaEntities.CreativeWork", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MainEntityOfPageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SchemaType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SubjectOfId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MainEntityOfPageId");

                    b.HasIndex("ParentId");

                    b.HasIndex("SubjectOfId");

                    b.ToTable("CreativeWork", "Schema");
                });

            modelBuilder.Entity("SEOKeywordsSchema.Schemas.SchemaEntities.CreativeWorks.Article", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SchemaType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Article", "Schema");
                });

            modelBuilder.Entity("SEOKeywordsSchema.Schemas.SchemaEntities.CreativeWorks.MediaObject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("MediaObject", "Schema");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("SEOKeywordsSchema.Schemas.SchemaEntities.CreativeWorks.MediaObjects.ImageObject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.HasIndex("ParentId");

                    b.ToTable("ImageObject", "Schema");
                });

            modelBuilder.Entity("SEOKeywordsSchema.Schemas.SchemaEntities.Thing", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AdditionalTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AlternateNameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DescriptionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DisambiguatingDescriptionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdentifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MainEntityOfPageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("NameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PotentialActionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SameAsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SubjectOfId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UrlId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AdditionalTypeId");

                    b.HasIndex("AlternateNameId");

                    b.HasIndex("DescriptionId");

                    b.HasIndex("DisambiguatingDescriptionId");

                    b.HasIndex("IdentifierId");

                    b.HasIndex("ImageId");

                    b.HasIndex("MainEntityOfPageId");

                    b.HasIndex("NameId");

                    b.HasIndex("ParentId");

                    b.HasIndex("PotentialActionId");

                    b.HasIndex("SameAsId");

                    b.HasIndex("SubjectOfId");

                    b.HasIndex("UrlId");

                    b.ToTable("Thing", "Schema");
                });

            modelBuilder.Entity("SEOKeywordsSchema.Schemas.SchemaProperties.BaseMixedTypes.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("HasValue1")
                        .HasColumnType("bit");

                    b.Property<bool>("HasValue2")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSingle")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Image", "Schema.Property");
                });

            modelBuilder.Entity("SEOKeywordsSchema.Schemas.SchemaProperties.BaseMixedTypes.MainEntityOfPage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("HasValue1")
                        .HasColumnType("bit");

                    b.Property<bool>("HasValue2")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSingle")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("MainEntityOfPage", "Schema.Property");
                });

            modelBuilder.Entity("SEOKeywordsSchema.Schemas.SchemaProperties.BaseMixedTypes.SubjectOf", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("HasValue1")
                        .HasColumnType("bit");

                    b.Property<bool>("HasValue2")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSingle")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("SubjectOf", "Schema.Property");
                });

            modelBuilder.Entity("SEOKeywordsSchema.Schemas.SchemaProperties.Things.Properties.AdditionalType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("HasValue1")
                        .HasColumnType("bit");

                    b.Property<bool>("HasValue2")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSingle")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("AdditionalType", "Schema.Property");
                });

            modelBuilder.Entity("SEOKeywordsSchema.Schemas.SchemaProperties.Things.Properties.Description", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("HasValue1")
                        .HasColumnType("bit");

                    b.Property<bool>("HasValue2")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSingle")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Description", "Schema.Property");
                });

            modelBuilder.Entity("SEOKeywordsSchema.Schemas.SchemaProperties.Things.Properties.PotentialAction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("PotentialAction", "Schema.Property");
                });

            modelBuilder.Entity("SEOKeywordsSchema.Schemas.SchemaProperties.Things.Properties.AlternateName", b =>
                {
                    b.HasBaseType("SEOKeywordsSchema.Schemas.Contracts.BaseValueTypes.Text");

                    b.ToTable("AlternateName", "Schema.Property");
                });

            modelBuilder.Entity("SEOKeywordsSchema.Schemas.SchemaProperties.Things.Properties.Identifier", b =>
                {
                    b.HasBaseType("SEOKeywordsSchema.Schemas.Contracts.BaseValueTypes.Text");

                    b.ToTable("Identifier", "Schema.Property");
                });

            modelBuilder.Entity("SEOKeywordsSchema.Schemas.SchemaEntities.CreativeWorks.MediaObjects.TextObject", b =>
                {
                    b.HasBaseType("SEOKeywordsSchema.Schemas.SchemaEntities.CreativeWorks.MediaObject");

                    b.Property<Guid?>("DescriptionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("DescriptionId");

                    b.ToTable("TextObject", "Schema.Property");
                });

            modelBuilder.Entity("SEOKeywordsSchema.Schemas.Contracts.BaseValueTypes.Text", b =>
                {
                    b.HasOne("SEOKeywordsSchema.Schemas.SchemaProperties.Things.Properties.AdditionalType", null)
                        .WithMany("Value1")
                        .HasForeignKey("AdditionalTypeId");

                    b.HasOne("SEOKeywordsSchema.Schemas.SchemaProperties.Things.Properties.Description", null)
                        .WithMany("Value1")
                        .HasForeignKey("DescriptionId");
                });

            modelBuilder.Entity("SEOKeywordsSchema.Schemas.Contracts.BaseValueTypes.URL", b =>
                {
                    b.HasOne("SEOKeywordsSchema.Schemas.SchemaProperties.Things.Properties.AdditionalType", null)
                        .WithMany("Value2")
                        .HasForeignKey("AdditionalTypeId");

                    b.HasOne("SEOKeywordsSchema.Schemas.SchemaProperties.BaseMixedTypes.Image", null)
                        .WithMany("Value2")
                        .HasForeignKey("ImageId");

                    b.HasOne("SEOKeywordsSchema.Schemas.SchemaProperties.BaseMixedTypes.MainEntityOfPage", null)
                        .WithMany("Value2")
                        .HasForeignKey("MainEntityOfPageId");

                    b.HasOne("SEOKeywordsSchema.Schemas.SchemaProperties.BaseMixedTypes.SubjectOf", null)
                        .WithMany("Value2")
                        .HasForeignKey("SubjectOfId");
                });

            modelBuilder.Entity("SEOKeywordsSchema.Schemas.SchemaEntities.CreativeWork", b =>
                {
                    b.HasOne("SEOKeywordsSchema.Schemas.SchemaProperties.BaseMixedTypes.MainEntityOfPage", null)
                        .WithMany("Value1")
                        .HasForeignKey("MainEntityOfPageId");

                    b.HasOne("SEOKeywordsSchema.Schemas.SchemaEntities.Thing", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.HasOne("SEOKeywordsSchema.Schemas.SchemaProperties.BaseMixedTypes.SubjectOf", null)
                        .WithMany("Value1")
                        .HasForeignKey("SubjectOfId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("SEOKeywordsSchema.Schemas.SchemaEntities.CreativeWorks.Article", b =>
                {
                    b.HasOne("SEOKeywordsSchema.Schemas.SchemaEntities.CreativeWork", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("SEOKeywordsSchema.Schemas.SchemaEntities.CreativeWorks.MediaObject", b =>
                {
                    b.HasOne("SEOKeywordsSchema.Schemas.SchemaEntities.CreativeWork", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("SEOKeywordsSchema.Schemas.SchemaEntities.CreativeWorks.MediaObjects.ImageObject", b =>
                {
                    b.HasOne("SEOKeywordsSchema.Schemas.SchemaProperties.BaseMixedTypes.Image", null)
                        .WithMany("Value1")
                        .HasForeignKey("ImageId");

                    b.HasOne("SEOKeywordsSchema.Schemas.SchemaEntities.CreativeWorks.MediaObject", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("SEOKeywordsSchema.Schemas.SchemaEntities.Thing", b =>
                {
                    b.HasOne("SEOKeywordsSchema.Schemas.SchemaProperties.Things.Properties.AdditionalType", "AdditionalType")
                        .WithMany()
                        .HasForeignKey("AdditionalTypeId");

                    b.HasOne("SEOKeywordsSchema.Schemas.SchemaProperties.Things.Properties.AlternateName", "AlternateName")
                        .WithMany()
                        .HasForeignKey("AlternateNameId");

                    b.HasOne("SEOKeywordsSchema.Schemas.SchemaProperties.Things.Properties.Description", "Description")
                        .WithMany()
                        .HasForeignKey("DescriptionId");

                    b.HasOne("SEOKeywordsSchema.Schemas.Contracts.BaseValueTypes.Text", "DisambiguatingDescription")
                        .WithMany()
                        .HasForeignKey("DisambiguatingDescriptionId");

                    b.HasOne("SEOKeywordsSchema.Schemas.SchemaProperties.Things.Properties.Identifier", "Identifier")
                        .WithMany()
                        .HasForeignKey("IdentifierId");

                    b.HasOne("SEOKeywordsSchema.Schemas.SchemaProperties.BaseMixedTypes.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");

                    b.HasOne("SEOKeywordsSchema.Schemas.SchemaProperties.BaseMixedTypes.MainEntityOfPage", "MainEntityOfPage")
                        .WithMany()
                        .HasForeignKey("MainEntityOfPageId");

                    b.HasOne("SEOKeywordsSchema.Schemas.Contracts.BaseValueTypes.Text", "Name")
                        .WithMany()
                        .HasForeignKey("NameId");

                    b.HasOne("SEOKeywordsSchema.Schemas.SchemaEntities.Thing", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.HasOne("SEOKeywordsSchema.Schemas.SchemaProperties.Things.Properties.PotentialAction", "PotentialAction")
                        .WithMany()
                        .HasForeignKey("PotentialActionId");

                    b.HasOne("SEOKeywordsSchema.Schemas.Contracts.BaseValueTypes.URL", "SameAs")
                        .WithMany()
                        .HasForeignKey("SameAsId");

                    b.HasOne("SEOKeywordsSchema.Schemas.SchemaProperties.BaseMixedTypes.SubjectOf", "SubjectOf")
                        .WithMany()
                        .HasForeignKey("SubjectOfId");

                    b.HasOne("SEOKeywordsSchema.Schemas.Contracts.BaseValueTypes.URL", "Url")
                        .WithMany()
                        .HasForeignKey("UrlId");

                    b.Navigation("AdditionalType");

                    b.Navigation("AlternateName");

                    b.Navigation("Description");

                    b.Navigation("DisambiguatingDescription");

                    b.Navigation("Identifier");

                    b.Navigation("Image");

                    b.Navigation("MainEntityOfPage");

                    b.Navigation("Name");

                    b.Navigation("Parent");

                    b.Navigation("PotentialAction");

                    b.Navigation("SameAs");

                    b.Navigation("SubjectOf");

                    b.Navigation("Url");
                });

            modelBuilder.Entity("SEOKeywordsSchema.Schemas.SchemaProperties.Things.Properties.AlternateName", b =>
                {
                    b.HasOne("SEOKeywordsSchema.Schemas.Contracts.BaseValueTypes.Text", null)
                        .WithOne()
                        .HasForeignKey("SEOKeywordsSchema.Schemas.SchemaProperties.Things.Properties.AlternateName", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SEOKeywordsSchema.Schemas.SchemaProperties.Things.Properties.Identifier", b =>
                {
                    b.HasOne("SEOKeywordsSchema.Schemas.Contracts.BaseValueTypes.Text", null)
                        .WithOne()
                        .HasForeignKey("SEOKeywordsSchema.Schemas.SchemaProperties.Things.Properties.Identifier", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SEOKeywordsSchema.Schemas.SchemaEntities.CreativeWorks.MediaObjects.TextObject", b =>
                {
                    b.HasOne("SEOKeywordsSchema.Schemas.SchemaProperties.Things.Properties.Description", null)
                        .WithMany("Value2")
                        .HasForeignKey("DescriptionId");

                    b.HasOne("SEOKeywordsSchema.Schemas.SchemaEntities.CreativeWorks.MediaObject", null)
                        .WithOne()
                        .HasForeignKey("SEOKeywordsSchema.Schemas.SchemaEntities.CreativeWorks.MediaObjects.TextObject", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SEOKeywordsSchema.Schemas.SchemaProperties.BaseMixedTypes.Image", b =>
                {
                    b.Navigation("Value1");

                    b.Navigation("Value2");
                });

            modelBuilder.Entity("SEOKeywordsSchema.Schemas.SchemaProperties.BaseMixedTypes.MainEntityOfPage", b =>
                {
                    b.Navigation("Value1");

                    b.Navigation("Value2");
                });

            modelBuilder.Entity("SEOKeywordsSchema.Schemas.SchemaProperties.BaseMixedTypes.SubjectOf", b =>
                {
                    b.Navigation("Value1");

                    b.Navigation("Value2");
                });

            modelBuilder.Entity("SEOKeywordsSchema.Schemas.SchemaProperties.Things.Properties.AdditionalType", b =>
                {
                    b.Navigation("Value1");

                    b.Navigation("Value2");
                });

            modelBuilder.Entity("SEOKeywordsSchema.Schemas.SchemaProperties.Things.Properties.Description", b =>
                {
                    b.Navigation("Value1");

                    b.Navigation("Value2");
                });
#pragma warning restore 612, 618
        }
    }
}
